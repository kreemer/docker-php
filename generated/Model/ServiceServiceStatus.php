<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Docker\API\Model;

class ServiceServiceStatus
{
    /**
     * The number of tasks for the service currently in the Running state.
     *
     * @var int|null
     */
    protected $runningTasks;
    /**
     * The number of tasks for the service desired to be running.
     *
     * @var int|null
     */
    protected $desiredTasks;
    /**
     * The number of tasks for a job that are in the Completed state.
     *
     * @var int|null
     */
    protected $completedTasks;

    /**
     * The number of tasks for the service currently in the Running state.
     */
    public function getRunningTasks(): ?int
    {
        return $this->runningTasks;
    }

    /**
     * The number of tasks for the service currently in the Running state.
     */
    public function setRunningTasks(?int $runningTasks): self
    {
        $this->runningTasks = $runningTasks;

        return $this;
    }

    /**
     * The number of tasks for the service desired to be running.
    than Shutdown.
     */
    public function getDesiredTasks(): ?int
    {
        return $this->desiredTasks;
    }

    /**
     * The number of tasks for the service desired to be running.
    than Shutdown.
     */
    public function setDesiredTasks(?int $desiredTasks): self
    {
        $this->desiredTasks = $desiredTasks;

        return $this;
    }

    /**
     * The number of tasks for a job that are in the Completed state.
    mean the job-mode service has no tasks yet Completed.
     */
    public function getCompletedTasks(): ?int
    {
        return $this->completedTasks;
    }

    /**
     * The number of tasks for a job that are in the Completed state.
    mean the job-mode service has no tasks yet Completed.
     */
    public function setCompletedTasks(?int $completedTasks): self
    {
        $this->completedTasks = $completedTasks;

        return $this;
    }
}
